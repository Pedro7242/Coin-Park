<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />
  <title>Jogo</title>
  <link rel="stylesheet" href="css.css" />
  <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
</head>
<body>
<script>
  const body = document.body;
  const fixa = document.createElement("div");
  fixa.className = "fixa";

  const hud = document.createElement("div");
  hud.className = "hud";

  const contador = document.createElement("div");
  contador.id = "contador";
  contador.textContent = "Moedas: 0/20";

  const timer = document.createElement("div");
  timer.id = "timer";
  timer.textContent = "Tempo: 0s";

  hud.append(contador, timer);
  fixa.appendChild(hud);

  const plataformas = ["teto", "chao", "plataforma", "plataforma2", "camada1 piso", "camada2 piso", "camada3 piso", "paredeesq", "parededir"];
  plataformas.forEach(cls => {
    const el = document.createElement("div");
    el.className = cls;
    fixa.appendChild(el);
  });

  const jogadorEl = document.createElement("div");
  jogadorEl.id = "jogador";
  jogadorEl.className = "jogador";
  fixa.appendChild(jogadorEl);

  for (let i = 1; i <= 20; i++) {
    const moeda = document.createElement("img");
    moeda.className = `moeda moeda${i}`;
    moeda.src = "moeda.png";
    fixa.appendChild(moeda);
  }

  const portaEl = document.createElement("img");
  portaEl.className = "porta trancada";
  portaEl.src = "porta.png";
  fixa.appendChild(portaEl);
  body.appendChild(fixa);

  const play = document.createElement("div");
  play.id = "play";
  play.innerHTML = `
    <h1>Coin Park</h1>
    <input id="nick" placeholder="Digite seu nome">
    <button id="butao" class="enter">Jogar</button>
  `;
  body.appendChild(play);

  const fim = document.createElement("div");
  fim.id = "fim";
  fim.style.display = "none";
  fim.innerHTML = `
    <h1>Fim de Jogo</h1>
    <p>Seu tempo: <span id="tempo-final">0</span>s</p>
    <div id="ranking"></div>
    <button id="reiniciar">Jogar de novo</button>
  `;
  body.appendChild(fim);

  // === CÓDIGO DO JOGO ===
  let tempo = 0;
  let moedasPegas = 0;
  let totalMoedas = 0;
  let timerInterval;
  let jogadorInstancia;
  let porta;
  let fimDeJogo = false;

  function iniciarTimer() {
    timerInterval = setInterval(() => {
      tempo++;
      document.getElementById('timer').textContent = `Tempo: ${tempo}s`;
    }, 1000);
  }

  function pararTimer() {
    clearInterval(timerInterval);
  }

  function mostrarTelaFinal() {
    fimDeJogo = true;
    document.getElementById('fim').style.display = 'block';
    document.getElementById('tempo-final').textContent = tempo;

    let nome = localStorage.getItem('nomeJogador') || "Sem nome";
    let ranking = localStorage.getItem('rankingTempo');
    ranking = ranking ? JSON.parse(ranking) : [];

    ranking.push({ nome: nome, tempo: tempo });
    ranking.sort((a, b) => a.tempo - b.tempo);
    localStorage.setItem('rankingTempo', JSON.stringify(ranking));

    let texto = "<h3>Ranking (Tempo)</h3>";
    for (let i = 0; i < Math.min(5, ranking.length); i++) {
      texto += `<p>${i + 1}º - ${ranking[i].nome} - ${ranking[i].tempo}s</p>`;
    }

    document.getElementById('ranking').innerHTML = texto;
  }

  function adicionarMoeda() {
    moedasPegas++;
    document.getElementById('contador').textContent = `Moedas: ${moedasPegas}/${totalMoedas}`;
    if (moedasPegas === totalMoedas) {
      porta.ativar();
    }
  }

  class Moeda {
    constructor(elementoHtml) {
      this.elemento = elementoHtml;
    }

    verificarColisao(jogador) {
      const retJogador = jogador.getBoundingClientRect();
      const retMoeda = this.elemento.getBoundingClientRect();
      const colidiu =
        retJogador.left < retMoeda.right &&
        retJogador.right > retMoeda.left &&
        retJogador.top < retMoeda.bottom &&
        retJogador.bottom > retMoeda.top;

      if (colidiu) {
        this.elemento.remove();
        adicionarMoeda();
        return true;
      }
      return false;
    }
  }

  class Porta {
    constructor(elemento) {
      this.el = elemento;
      this.ativa = false;
    }

    ativar() {
      this.ativa = true;
      this.el.classList.remove('trancada');
    }

    checarEntrada(jogador) {
      if (!this.ativa) return;
      const r1 = this.el.getBoundingClientRect();
      const r2 = jogador.el.getBoundingClientRect();
      const encostou = !(r1.right < r2.left || r1.left > r2.right || r1.bottom < r2.top || r1.top > r2.bottom);
      if (encostou) {
        pararTimer();
        mostrarTelaFinal();
      }
    }
  }

  class Jogador {
    constructor(el) {
      this.el = el;
      this.x = 630;
      this.y = 300;
      this.velX = 0;
      this.velY = 0;
      this.largura = this.el.offsetWidth;
      this.altura = this.el.offsetHeight;
      this.noChao = false;

      this.velocidade = 5;
      this.forcaPulo = 20;
      this.gravidade = 0.8;
      this.limiteVelY = 15;

      this.pisos = Array.from(document.querySelectorAll(
        '.piso, .chao, .teto, .plataforma, .plataforma2, .camada1, .camada2, .camada3, .paredeesq, .parededir'
      ));

      this.moedas = Array.from(document.querySelectorAll('.moeda')).map(el => new Moeda(el));
    }

    mover(direcao) {
      this.velX = direcao * this.velocidade;
    }

    pular() {
      if (this.noChao) {
        this.velY = -this.forcaPulo;
        this.noChao = false;
      }
    }

    aplicarGravidade() {
      this.velY += this.gravidade;
      if (this.velY > this.limiteVelY) this.velY = this.limiteVelY;
    }

    atualizar() {
      this.aplicarGravidade();
      this.x += this.velX;
      this.detectarColisoes('horizontal');
      this.y += this.velY;
      this.detectarColisoes('vertical');
      this.coletarMoedas();
      this.el.style.left = this.x + "px";
      this.el.style.top = this.y + "px";
    }

    detectarColisoes(eixo) {
      const jogadorRect = { x: this.x, y: this.y, width: this.largura, height: this.altura };
      for (const piso of this.pisos) {
        const pisoRect = { x: piso.offsetLeft, y: piso.offsetTop, width: piso.offsetWidth, height: piso.offsetHeight };
        if (this.colisaoRetangulos(jogadorRect, pisoRect)) {
          if (eixo === 'horizontal') {
            if (this.velX > 0) this.x = pisoRect.x - jogadorRect.width;
            else if (this.velX < 0) this.x = pisoRect.x + pisoRect.width;
          } else {
            if (this.velY > 0) {
              this.y = pisoRect.y - jogadorRect.height;
              this.velY = 0;
              this.noChao = true;
            } else if (this.velY < 0) {
              this.y = pisoRect.y + pisoRect.height;
              this.velY = 0;
            }
          }
        }
      }
    }

    colisaoRetangulos(r1, r2) {
      return r1.x < r2.x + r2.width && r1.x + r1.width > r2.x &&
             r1.y < r2.y + r2.height && r1.y + r1.height > r2.y;
    }

    coletarMoedas() {
      this.moedas = this.moedas.filter(moeda => !moeda.verificarColisao(this.el));
    }
  }

  function loopJogo() {
    if (!fimDeJogo) {
      if (jogadorInstancia) {
        jogadorInstancia.atualizar();
        porta.checarEntrada(jogadorInstancia);
      }
      requestAnimationFrame(loopJogo);
    }
  }

  function iniciarJogo() {
    jogadorInstancia = new Jogador(document.getElementById('jogador'));
    porta = new Porta(document.querySelector('.porta'));
    totalMoedas = document.querySelectorAll('.moeda').length;
    moedasPegas = 0;
    tempo = 0;
    document.getElementById('contador').textContent = `Moedas: 0/${totalMoedas}`;
    document.getElementById('timer').textContent = `Tempo: 0s`;
    iniciarTimer();
    requestAnimationFrame(loopJogo);
  }

  document.addEventListener("DOMContentLoaded", () => {
    const btnPlay = document.getElementById("butao");
    const telaPlay = document.getElementById("play");
    const nickInput = document.getElementById("nick");

    btnPlay.addEventListener("click", () => {
      const nome = nickInput.value.trim();
      if (nome === '') {
        alert("Digite seu nome para começar!");
        return;
      }
      localStorage.setItem("nomeJogador", nome);
      telaPlay.style.display = "none";
      iniciarJogo();
    });

    document.getElementById('reiniciar').addEventListener('click', () => {
      window.location.reload();
    });

    let frame = 0;
    const jogador = document.getElementById("jogador");

    setInterval(() => {
      if (!jogadorInstancia) return;
      jogador.style.backgroundPosition = `-${(jogadorInstancia.velX !== 0 ? frame++ % 3 : 0) * 48}px 0px`;
      jogador.style.transform = jogadorInstancia.velX < 0 ? "scaleX(-1)" : jogadorInstancia.velX > 0 ? "scaleX(1)" : "";
    }, 250);
  });

  document.addEventListener('keydown', (e) => {
    if (!jogadorInstancia) return;
    if (e.code === 'ArrowLeft' || e.code === 'KeyA') jogadorInstancia.mover(-1);
    else if (e.code === 'ArrowRight' || e.code === 'KeyD') jogadorInstancia.mover(1);
    else if (e.code === 'ArrowUp' || e.code === 'Space') jogadorInstancia.pular();
  });

  document.addEventListener('keyup', (e) => {
    if (!jogadorInstancia) return;
    if (['ArrowLeft', 'ArrowRight', 'KeyA', 'KeyD'].includes(e.code)) jogadorInstancia.mover(0);
  });
</script>
</body>
</html>
