let tempo = 0;
let moedasPegas = 0;
let totalMoedas = 0;
let timerInterval;
let jogadorInstancia;
let porta;

function iniciarTimer() {
  timerInterval = setInterval(() => {
    tempo++;
    document.getElementById('timer').textContent = `Tempo: ${tempo}s`;
  }, 1000);
}

function pararTimer() {
  clearInterval(timerInterval);
}

function mostrarTelaFinal() {
  // mostrar a tela de fim
  document.getElementById('fim').style.display = 'block';
  document.getElementById('tempo-final').textContent = tempo;

  // pegar nome do jogador
  let nome = localStorage.getItem('nomeJogador') || "Sem nome";

  // pegar ranking antigo
  let ranking = localStorage.getItem('rankingTempo');
  if (ranking) {
    ranking = JSON.parse(ranking);
  } else {
    ranking = [];
  }

  // adicionar novo tempo ao ranking
  ranking.push({ nome: nome, tempo: tempo });

  // ordenar do menor tempo pro maior
  ranking.sort(function(a, b) {
    return a.tempo - b.tempo;
  });

  // guardar de volta no localStorage
  localStorage.setItem('rankingTempo', JSON.stringify(ranking));

  // mostrar na tela
  let texto = "<h3>Ranking (Tempo)</h3>";
  for (let i = 0; i < Math.min(5, ranking.length); i++) {
    texto += "<p>" + (i + 1) + "º - " + ranking[i].nome + " - " + ranking[i].tempo + "s</p>";
  }

  document.getElementById('ranking').innerHTML = texto;
}

function adicionarMoeda() {
  moedasPegas++;
  document.getElementById('contador').textContent = `Moedas: ${moedasPegas}/${totalMoedas}`;

  if (moedasPegas === totalMoedas) {
    porta.ativar();
  }
}

class Moeda {
  constructor(elementoHtml) {
    this.elemento = elementoHtml;
  }

  verificarColisao(jogador) {
    const retJogador = jogador.getBoundingClientRect();
    const retMoeda = this.elemento.getBoundingClientRect();

    const colidiu =
      retJogador.left < retMoeda.right &&
      retJogador.right > retMoeda.left &&
      retJogador.top < retMoeda.bottom &&
      retJogador.bottom > retMoeda.top;

    if (colidiu) {
      this.elemento.remove();
      adicionarMoeda();
      return true;
    }

    return false;
  }
}

class Porta {
  constructor(elemento) {
    this.el = elemento;
    this.ativa = false;
  }

  ativar() {
    this.ativa = true;
    this.el.classList.remove('trancada');
  }

  checarEntrada(jogador) {
    if (!this.ativa) return;

    const r1 = this.el.getBoundingClientRect();
    const r2 = jogador.el.getBoundingClientRect();

    const encostou = !(
      r1.right < r2.left ||
      r1.left > r2.right ||
      r1.bottom < r2.top ||
      r1.top > r2.bottom
    );

    if (encostou) {
      pararTimer();
      mostrarTelaFinal();
    }
  }
}

class Jogador {
  constructor(elementoHtml) {
    this.el = elementoHtml;
    this.x = 630;
    this.y = 390;

    this.velX = 0;
    this.velY = 0;

    this.largura = this.el.offsetWidth;
    this.altura = this.el.offsetHeight;

    this.noChao = false;
    this.velocidade = 4;
    this.forcaPulo = 20;
    this.gravidade = 1;
    this.limiteVelY = 12;

    this.pisos = Array.from(document.querySelectorAll('.piso, .chao, .teto, .plataforma, .plataforma2, .camada1, .camada2, .camada3'));
    this.moedas = Array.from(document.querySelectorAll('.moeda')).map(el => new Moeda(el));
  }

  mover(direcao) {
    this.velX = direcao * this.velocidade;
  }

  pular() {
    if (this.noChao) {
      this.velY = -this.forcaPulo;
      this.noChao = false;
    }
  }

  aplicarGravidade() {
    this.velY += this.gravidade;
    if (this.velY > this.limiteVelY) this.velY = this.limiteVelY;
  }

  atualizar() {
    this.aplicarGravidade();

    this.x += this.velX;
    this.y += this.velY;

    this.detectarColisoesComPiso();
    this.coletarMoedas();

    this.el.style.left = this.x + "px";
    this.el.style.top = this.y + "px";
  }

  detectarColisoesComPiso() {
  this.noChao = false;

  const jogadorRect = {
    left: this.x,
    right: this.x + this.largura,
    top: this.y,
    bottom: this.y + this.altura,
  };

  for (const piso of this.pisos) {
    const pisoRect = piso.getBoundingClientRect();

    const pisoBox = {
      left: piso.offsetLeft,
      top: piso.offsetTop,
      right: piso.offsetLeft + piso.offsetWidth,
      bottom: piso.offsetTop + piso.offsetHeight,
    };

    const colidiu = !(
      jogadorRect.right < pisoBox.left ||
      jogadorRect.left > pisoBox.right ||
      jogadorRect.bottom < pisoBox.top ||
      jogadorRect.top > pisoBox.bottom
    );

    if (colidiu) {
      // Verificar colisão vertical (cair em cima do piso)
      if (
        this.velY >= 0 &&
        jogadorRect.bottom <= pisoBox.top + this.velY
      ) {
        this.y = pisoBox.top - this.altura;
        this.velY = 0;
        this.noChao = true;
      }

      // Impedir atravessar por baixo
      else if (
        this.velY < 0 &&
        jogadorRect.top >= pisoBox.bottom - this.velY
      ) {
        this.y = pisoBox.bottom;
        this.velY = 0;
      }

      // Impedir atravessar lateralmente
      else if (this.velX !== 0) {
        if (jogadorRect.right > pisoBox.left && jogadorRect.left < pisoBox.left) {
          this.x = pisoBox.left - this.largura;
        } else if (jogadorRect.left < pisoBox.right && jogadorRect.right > pisoBox.right) {
          this.x = pisoBox.right;
        }
        this.velX = 0;
      }
    }
  }
}


  coletarMoedas() {
    this.moedas = this.moedas.filter(moeda => !moeda.verificarColisao(this.el));
  }
}

function loopJogo() {
  if (jogadorInstancia) {
    jogadorInstancia.atualizar();
    porta.checarEntrada(jogadorInstancia);
  }

  requestAnimationFrame(loopJogo);
}

function iniciarJogo() {
  const jogadorEl = document.getElementById('jogador');
  jogadorInstancia = new Jogador(jogadorEl);
  jogadorInstancia.el.style.backgroundColor = 'red';

  porta = new Porta(document.querySelector('.porta'));

  totalMoedas = document.querySelectorAll('.moeda').length;
  moedasPegas = 0;
  tempo = 0;

  document.getElementById('contador').textContent = `Moedas: 0/${totalMoedas}`;
  document.getElementById('timer').textContent = `Tempo: 0s`;

  iniciarTimer();
  requestAnimationFrame(loopJogo);
}

// DOM carregado
document.addEventListener("DOMContentLoaded", () => {
  const btnPlay = document.getElementById("butao");
  const telaPlay = document.getElementById("play");
  const nickInput = document.getElementById("nick");

  if (btnPlay && telaPlay) {
    btnPlay.addEventListener("click", () => {
      const nome = nickInput.value.trim();

      if (nome === '') {
        alert("Digite seu nome para começar!");
        return;
      }

      telaPlay.style.display = "none";
      iniciarJogo();
    });
  }

  // Botão de reiniciar
  const btnReiniciar = document.getElementById('reiniciar');
  if (btnReiniciar) {
    btnReiniciar.addEventListener('click', () => {
      window.location.reload();
    });
  }
});

// CONTROLES
document.addEventListener('keydown', (e) => {
  if (!jogadorInstancia) return;

  if (e.code === 'ArrowLeft' || e.code === 'KeyA') {
    jogadorInstancia.mover(-1);
  } else if (e.code === 'ArrowRight' || e.code === 'KeyD') {
    jogadorInstancia.mover(1);
  } else if (e.code === 'ArrowUp' || e.code === 'Space') {
    jogadorInstancia.pular();
  }
});

document.addEventListener('keyup', (e) => {
  if (!jogadorInstancia) return;

  if (
    e.code === 'ArrowLeft' ||
    e.code === 'ArrowRight' ||
    e.code === 'KeyA' ||
    e.code === 'KeyD'
  ) {
    jogadorInstancia.mover(0);
  }
});

