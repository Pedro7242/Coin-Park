// ================================
// VARIÁVEIS GLOBAIS
// ================================
let tempo = 0;
let moedasColetadas = 0;
let totalMoedas = 0;
let intervaloTempo;
let jogador;
let porta;

// ================================
// TEMPORIZADOR
// ================================
function iniciarContagem() {
  intervaloTempo = setInterval(() => {
    tempo++;
    document.getElementById('timer').textContent = `Tempo: ${tempo}s`;
  }, 1000);
}

function pararContagem() {
  clearInterval(intervaloTempo);
}

// ================================
// CLASSES
// ================================
class Moeda {
  constructor(el) {
    this.el = el;
  }

  colidiu(jogadorEl) {
    const a = jogadorEl.getBoundingClientRect();
    const b = this.el.getBoundingClientRect();

    const colidiu = a.left < b.right && a.right > b.left && a.top < b.bottom && a.bottom > b.top;

    if (colidiu) {
      this.el.remove();
      moedasColetadas++;
      document.getElementById('contador').textContent = `Moedas: ${moedasColetadas}/${totalMoedas}`;

      if (moedasColetadas === totalMoedas) {
        porta.ativar();
      }

      return true;
    }

    return false;
  }
}

class Porta {
  constructor(el) {
    this.el = el;
    this.ativa = false;
  }

  ativar() {
    this.ativa = true;
    this.el.classList.remove('trancada');
  }

  verificarEntrada(jogadorEl) {
    if (!this.ativa) return;

    const a = this.el.getBoundingClientRect();
    const b = jogadorEl.getBoundingClientRect();

    const entrou = !(a.right < b.left || a.left > b.right || a.bottom < b.top || a.top > b.bottom);

    if (entrou) {
      pararContagem();
      mostrarTelaFinal();
    }
  }
}

class Jogador {
  constructor(el) {
    this.el = el;
    this.x = 630;
    this.y = 390;
    this.largura = el.offsetWidth;
    this.altura = el.offsetHeight;

    this.velX = 0;
    this.velY = 0;
    this.noChao = false;

    this.velocidade = 4;
    this.pulo = 20;
    this.gravidade = 1;
    this.maxVelY = 12;

    this.pisos = [...document.querySelectorAll('.piso, .chao, .teto, .plataforma, .plataforma2, .camada1, .camada2, .camada3')];
    this.moedas = [...document.querySelectorAll('.moeda')].map(el => new Moeda(el));
  }

  mover(direcao) {
    this.velX = direcao * this.velocidade;
  }

  pular() {
    if (this.noChao) {
      this.velY = -this.pulo;
      this.noChao = false;
    }
  }

  aplicarGravidade() {
    this.velY += this.gravidade;
    if (this.velY > this.maxVelY) this.velY = this.maxVelY;
  }

  atualizar() {
    this.aplicarGravidade();
    this.x += this.velX;
    this.y += this.velY;
    this.checarColisoes();
    this.coletarMoedas();
    this.el.style.left = this.x + 'px';
    this.el.style.top = this.y + 'px';
  }

  checarColisoes() {
    this.noChao = false;
    const jogadorRect = { left: this.x, right: this.x + this.largura, top: this.y, bottom: this.y + this.altura };

    for (const piso of this.pisos) {
      const pisoRect = {
        left: piso.offsetLeft,
        top: piso.offsetTop,
        right: piso.offsetLeft + piso.offsetWidth,
        bottom: piso.offsetTop + piso.offsetHeight,
      };

      const colidiu = !(jogadorRect.right < pisoRect.left || jogadorRect.left > pisoRect.right || jogadorRect.bottom < pisoRect.top || jogadorRect.top > pisoRect.bottom);

      if (colidiu) {
        if (this.velY >= 0 && jogadorRect.bottom <= pisoRect.top + this.velY) {
          this.y = pisoRect.top - this.altura;
          this.velY = 0;
          this.noChao = true;
        } else if (this.velY < 0 && jogadorRect.top >= pisoRect.bottom - this.velY) {
          this.y = pisoRect.bottom;
          this.velY = 0;
        } else if (this.velX !== 0) {
          if (jogadorRect.right > pisoRect.left && jogadorRect.left < pisoRect.left) {
            this.x = pisoRect.left - this.largura;
          } else if (jogadorRect.left < pisoRect.right && jogadorRect.right > pisoRect.right) {
            this.x = pisoRect.right;
          }
          this.velX = 0;
        }
      }
    }
  }

  coletarMoedas() {
    this.moedas = this.moedas.filter(moeda => !moeda.colidiu(this.el));
  }
}

// ================================
// LÓGICA DO JOGO
// ================================
function mostrarTelaFinal() {
  document.getElementById('fim').style.display = 'block';
  document.getElementById('tempo-final').textContent = tempo;

  const nome = localStorage.getItem('nomeJogador') || 'Sem nome';
  let ranking = JSON.parse(localStorage.getItem('rankingTempo') || '[]');
  ranking.push({ nome, tempo });
  ranking.sort((a, b) => a.tempo - b.tempo);
  localStorage.setItem('rankingTempo', JSON.stringify(ranking));

  let texto = '<h3>Ranking (Tempo)</h3>';
  for (let i = 0; i < Math.min(5, ranking.length); i++) {
    texto += `<p>${i + 1}º - ${ranking[i].nome} - ${ranking[i].tempo}s</p>`;
  }
  document.getElementById('ranking').innerHTML = texto;
}

function loop() {
  if (jogador) {
    jogador.atualizar();
    porta.verificarEntrada(jogador.el);
  }
  requestAnimationFrame(loop);
}

function iniciarJogo() {
  jogador = new Jogador(document.getElementById('jogador'));
  porta = new Porta(document.querySelector('.porta'));

  totalMoedas = document.querySelectorAll('.moeda').length;
  moedasColetadas = 0;
  tempo = 0;

  document.getElementById('contador').textContent = `Moedas: 0/${totalMoedas}`;
  document.getElementById('timer').textContent = `Tempo: 0s`;

  iniciarContagem();
  loop();
}

// ================================
// EVENTOS
// ================================
document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('butao')?.addEventListener('click', () => {
    const nome = document.getElementById('nick').value.trim();
    if (!nome) return alert('Digite seu nome para começar!');

    localStorage.setItem('nomeJogador', nome);
    document.getElementById('play').style.display = 'none';
    iniciarJogo();
  });

  document.getElementById('reiniciar')?.addEventListener('click', () => {
    location.reload();
  });
});

// CONTROLES
const tecla = e => {
  if (!jogador) return;
  const dir = (e.code === 'ArrowLeft' || e.code === 'KeyA') ? -1 : (e.code === 'ArrowRight' || e.code === 'KeyD') ? 1 : 0;
  if (dir !== 0) jogador.mover(e.type === 'keydown' ? dir : 0);
  if ((e.code === 'ArrowUp' || e.code === 'Space') && e.type === 'keydown') jogador.pular();
};

['keydown', 'keyup'].forEach(evt => document.addEventListener(evt, tecla));

function mostrarTelaFinal() {
  // mostrar a tela de fim
  document.getElementById('fim').style.display = 'block';
  document.getElementById('tempo-final').textContent = tempo;

  // pegar nome do jogador
  let nome = localStorage.getItem('nomeJogador') || "Sem nome";

  // pegar ranking antigo
  let ranking = localStorage.getItem('rankingTempo');
  if (ranking) {
    ranking = JSON.parse(ranking);
  } else {
    ranking = [];
  }

  // adicionar novo tempo ao ranking
  ranking.push({ nome: nome, tempo: tempo });

  // ordenar do menor tempo pro maior
  ranking.sort(function(a, b) {
    return a.tempo - b.tempo;
  });

  // guardar de volta no localStorage
  localStorage.setItem('rankingTempo', JSON.stringify(ranking));

  // mostrar na tela
  let texto = "<h3>Ranking (Tempo)</h3>";
  for (let i = 0; i < Math.min(5, ranking.length); i++) {
    texto += "<p>" + (i + 1) + "º - " + ranking[i].nome + " - " + ranking[i].tempo + "s</p>";
  }

  document.getElementById('ranking').innerHTML = texto;
}
