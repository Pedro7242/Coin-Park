// === VARIÁVEIS GLOBAIS ===
let tempo = 0;
let moedasPegas = 0;
let totalMoedas = 0;
let timerInterval;
let jogadorInstancia;
let porta;
let fim = false;

// === TIMER ===
function iniciarTimer() {
  timerInterval = setInterval(() => {
    tempo++;
    document.getElementById('timer').textContent = `Tempo: ${tempo}s`;
  }, 1000);
}

function pararTimer() {
  clearInterval(timerInterval);
}

// === TELA FINAL E RANKING ===
function mostrarTelaFinal() {
  fim = true;;
  document.getElementById('fim').style.display = 'block';
  document.getElementById('tempo-final').textContent = tempo;

  let nome = localStorage.getItem('nomeJogador') || "Sem nome";
  let ranking = localStorage.getItem('rankingTempo');
  ranking = ranking ? JSON.parse(ranking) : [];

  ranking.push({ nome: nome, tempo: tempo });
  ranking.sort((a, b) => a.tempo - b.tempo);
  localStorage.setItem('rankingTempo', JSON.stringify(ranking));

  let texto = "<h3>Ranking (Tempo)</h3>";
  for (let i = 0; i < Math.min(5, ranking.length); i++) {
    texto += `<p>${i + 1}º - ${ranking[i].nome} - ${ranking[i].tempo}s</p>`;
  }

  document.getElementById('ranking').innerHTML = texto;
}

// === MOEDAS ===
function adicionarMoeda() {
  moedasPegas++;
  document.getElementById('contador').textContent = `Moedas: ${moedasPegas}/${totalMoedas}`;
  if (moedasPegas === totalMoedas) {
    porta.ativar();
  }
}

class Moeda {
  constructor(elementoHtml) {
    this.elemento = elementoHtml;
  }

  verificarColisao(jogador) {
    const retJogador = jogador.getBoundingClientRect();
    const retMoeda = this.elemento.getBoundingClientRect();

    const colidiu =
      retJogador.left < retMoeda.right &&
      retJogador.right > retMoeda.left &&
      retJogador.top < retMoeda.bottom &&
      retJogador.bottom > retMoeda.top;

    if (colidiu) {
      this.elemento.remove();
      adicionarMoeda();
      return true;
    }

    return false;
  }
}

// === PORTA ===
class Porta {
  constructor(elemento) {
    this.el = elemento;
    this.ativa = false;
  }

  ativar() {
    this.ativa = true;
    this.el.classList.remove('trancada');
  }

  checarEntrada(jogador) {
    if (!this.ativa) return;

    const r1 = this.el.getBoundingClientRect();
    const r2 = jogador.el.getBoundingClientRect();

    const encostou = !(
      r1.right < r2.left ||
      r1.left > r2.right ||
      r1.bottom < r2.top ||
      r1.top > r2.bottom
    );

    if (encostou) {
      pararTimer();
      mostrarTelaFinal();
    }
  }
}

// === JOGADOR ===
class Jogador {
  constructor(elementoHtml) {
    this.el = elementoHtml;
    this.x = 630;
    this.y = 300;
    this.velX = 0;
    this.velY = 0;
    this.largura = this.el.offsetWidth;
    this.altura = this.el.offsetHeight;
    this.noChao = false;

    this.velocidade = 5;
    this.forcaPulo = 20;
    this.gravidade = 0.8;
    this.limiteVelY = 15;

    this.pisos = Array.from(document.querySelectorAll(
      '.piso, .chao, .teto, .plataforma, .plataforma2, .camada1, .camada2, .camada3, .paredeesq, .parededir'
    ));

    this.moedas = Array.from(document.querySelectorAll('.moeda')).map(el => new Moeda(el));
  }

  mover(direcao) {
    this.velX = direcao * this.velocidade;
  }

  pular() {
    if (this.noChao) {
      this.velY = -this.forcaPulo;
      this.noChao = false;
    }
  }

  aplicarGravidade() {
    this.velY += this.gravidade;
    if (this.velY > this.limiteVelY) this.velY = this.limiteVelY;
  }

 atualizar() {
    this.aplicarGravidade();
    
    this.x += this.velX;
    this.detectarColisoes('horizontal');
    
    this.y += this.velY;
    this.detectarColisoes('vertical');

    this.coletarMoedas();

    this.el.style.left = this.x + "px";
    this.el.style.top = this.y + "px";
  }

  detectarColisoes(eixo) {
    const jogadorRect = {
      x: this.x,
      y: this.y,
      width: this.largura,
      height: this.altura
    };

    for (const piso of this.pisos) {
      const pisoRect = {
        x: piso.offsetLeft,
        y: piso.offsetTop,
        width: piso.offsetWidth,
        height: piso.offsetHeight
      };

      if (this.colisaoRetangulos(jogadorRect, pisoRect)) {
        if (eixo === 'horizontal') {
          if (this.velX > 0) {
            this.x = pisoRect.x - jogadorRect.width; 
          } else if (this.velX < 0) {
            this.x = pisoRect.x + pisoRect.width; 
          }
        } else if (eixo === 'vertical') {
          if (this.velY > 0) {
            this.y = pisoRect.y - jogadorRect.height;
            this.velY = 0;
            this.noChao = true;
          } else if (this.velY < 0) {
            this.y = pisoRect.y + pisoRect.height;
            this.velY = 0;
          }
        }
      }
    }
  }

  colisaoRetangulos(rect1, rect2) {
    return (
      rect1.x < rect2.x + rect2.width &&
      rect1.x + rect1.width > rect2.x &&
      rect1.y < rect2.y + rect2.height &&
      rect1.y + rect1.height > rect2.y
    );
  }

  coletarMoedas() {
    this.moedas = this.moedas.filter(moeda => !moeda.verificarColisao(this.el));
  }
}

// === LOOP PRINCIPAL ===
function loopJogo() {
  if (!fim) {
  if (jogadorInstancia) {
    jogadorInstancia.atualizar();
    porta.checarEntrada(jogadorInstancia);
  }

  requestAnimationFrame(loopJogo);
}
}

// === INICIAR JOGO ===
function iniciarJogo() {
  const jogadorEl = document.getElementById('jogador');
  jogadorInstancia = new Jogador(jogadorEl);
  jogadorInstancia.el.style.backgroundColor = 'trasparent'; // <- escrito incorretamente

  porta = new Porta(document.querySelector('.porta'));

  totalMoedas = document.querySelectorAll('.moeda').length;
  moedasPegas = 0;
  tempo = 0;

  document.getElementById('contador').textContent = `Moedas: 0/${totalMoedas}`;
  document.getElementById('timer').textContent = `Tempo: 0s`;

  iniciarTimer();
  requestAnimationFrame(loopJogo);
}

// === DOM CARREGADO ===
document.addEventListener("DOMContentLoaded", () => {
  const btnPlay = document.getElementById("butao");
  
  const telaPlay = document.getElementById("play");
  const nickInput = document.getElementById("nick");
 
  if (btnPlay && telaPlay) {
    btnPlay.addEventListener("click", () => {
      const nome = nickInput.value.trim();
      if (nome === '') {
        alert("Digite seu nome para começar!");
        return;
      }
      localStorage.setItem("nomeJogador", nome);
      telaPlay.style.display = "none";
      iniciarJogo();
    });
  }

  const btnReiniciar = document.getElementById('reiniciar');
  if (btnReiniciar) {
    btnReiniciar.addEventListener('click', () => {
      window.location.reload();
    });
  }

  // === ANIMAÇÃO DO JOGADOR ===
  let frame = 0;
  const jogador = document.getElementById("jogador");

  setInterval(() => {
    if (!jogadorInstancia) return;

    if (jogadorInstancia.velX !== 0) {
      frame = (frame + 1) % 3;
    } else {
      frame = 0;
    }

    jogador.style.backgroundPosition = `-${frame * 48}px 0px`;

    if (jogadorInstancia.velX < 0) {
      jogador.style.transform = "scaleX(-1)";
    } else if (jogadorInstancia.velX > 0) {
      jogador.style.transform = "scaleX(1)";
    }
  }, 250);
});

// === CONTROLES DO TECLADO ===
document.addEventListener('keydown', (e) => {
  if (!jogadorInstancia) return;

  if (e.code === 'ArrowLeft' || e.code === 'KeyA') {
    jogadorInstancia.mover(-1);
  } else if (e.code === 'ArrowRight' || e.code === 'KeyD') {
    jogadorInstancia.mover(1);
  } else if (e.code === 'ArrowUp' || e.code === 'Space') {
    jogadorInstancia.pular();
  }
});

document.addEventListener('keyup', (e) => {
  if (!jogadorInstancia) return;

  if (
    e.code === 'ArrowLeft' ||
    e.code === 'ArrowRight' ||
    e.code === 'KeyA' ||
    e.code === 'KeyD'
  ) {
    jogadorInstancia.mover(0);
  }
});
